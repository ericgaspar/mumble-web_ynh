#!/bin/bash

# doc: https://wiki.mumble.info/wiki/Running_Murmur

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
app=$YNH_APP_INSTANCE_NAME
welcometext=$YNH_APP_ARG_WELCOMETEXT
registerName=$YNH_APP_ARG_REGISTERNAME
instance_id=$YNH_APP_INSTANCE_NUMBER
mumbleweb=$YNH_APP_ARG_MUMBLEWEB
is_public=$YNH_APP_ARG_IS_PUBLIC

server_password=$(ynh_string_random)
su_passwd=$(ynh_string_random)

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=1

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

# Save app settings
ynh_app_setting_set "$app" domain          "$domain"
ynh_app_setting_set "$app" no_sso          "true"
ynh_app_setting_set "$app" server_password "$server_password"
ynh_app_setting_set "$app" su_passwd       "$su_passwd"
ynh_app_setting_set "$app" welcometext     "$welcometext"
ynh_app_setting_set "$app" registerName    "$registerName"
ynh_app_setting_set "$app" instance_id     "$instance_id"
ynh_app_setting_set "$app" mumbleweb       "$mumbleweb"
ynh_app_setting_set "$app" is_public       "$is_public"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
ynh_script_progression --message="Configuring firewall..." --weight=1

port=$(ynh_find_port 64738)
ynh_app_setting_set --app=$app --key=port --value=$port

# Open port in firewall
yunohost firewall allow Both "$port"

if [ "$mumbleweb" -eq 1 ] ; then
    port_web=$(ynh_find_port 64800)
    ynh_app_setting_set --app=$app --key=port --value=$port_web
    # Open port in firewall
    yunohost firewall allow Both "$port_web"
fi

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=4

# Install Mumble Debian package via apt
ynh_install_app_dependencies $pkg_dependencies

if [ "$mumbleweb" -eq 1 ] ; then
    ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$nodejs_version
fi

#=================================================
# INSTALL Mumble-web
#=================================================

mkdir -p "$final_path"
ynh_app_setting_set --app=$app --key=final_path --value=$final_path

if [ "$mumbleweb" -eq 1 ] ; then
    ynh_setup_source --dest_dir="$final_path"
fi

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=1

# Create a dedicated nginx config
ynh_add_nginx_config "port_web"

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=3

# Create a dedicated system user
ynh_system_user_create --username="$app" --home_dir="$final_path"

#=================================================
# SPECIFIC SETUP
#=================================================
# mumble server conf.ini
#=================================================

# Configuring with given settings
mumble_conf="$final_path/mumble-server.ini"

cp ../conf/mumble-server.ini "$mumble_conf"

ynh_replace_string --match_string="__FINALPATH__" --replace_string="$final_path"      --target_file="$mumble_conf"
ynh_replace_string --match_string="__APP__"       --replace_string="$app"             --target_file="$mumble_conf"
ynh_replace_string --match_string="__WELCOME__"   --replace_string="$welcometext"     --target_file="$mumble_conf"
ynh_replace_string --match_string="__PORT__"      --replace_string="$port"            --target_file="$mumble_conf"
ynh_replace_string --match_string="__SRV_PWD__"   --replace_string="$server_password" --target_file="$mumble_conf"
ynh_replace_string --match_string="__REGISTER__"  --replace_string="$registerName"    --target_file="$mumble_conf"
ynh_replace_string --match_string="__DOMAIN__"    --replace_string="$domain"          --target_file="$mumble_conf"

ynh_store_file_checksum "$mumble_conf"

if [ "$mumbleweb" -eq 1 ] ; then
	ynh_use_nodejs
	pushd "$final_path" 
	    chown -R $app: "$final_path"
	    #ynh_exec_as $app PATH="$nodejs_path:$PATH" "$nodejs_path/npm" install --save --loglevel warn
	    #ynh_exec_as $app PATH="$nodejs_path:$PATH" "$nodejs_path/npm" run build
	    ynh_exec_as $app env "$ynh_node_load_PATH" npm install
	    #ynh_exec_as $app env "$ynh_node_load_PATH" run build
	    #ls -lah
	popd
fi

#=================================================
# SETUP SYSTEMD
#=================================================

# Create a dedicated systemd config
ynh_add_systemd_config

if [ "$mumbleweb" -eq 1 ] ; then
    ynh_replace_string --match_string="__PORT__"     --replace_string="$port"     --target_file="../conf/mumble-web.service"
    ynh_replace_string --match_string="__PORT_WEB__" --replace_string="$port_web" --target_file="../conf/mumble-web.service"

	ynh_add_systemd_config "$app-web" mumble-web.service
fi

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

chmod -R 770 "$final_path"
chown -R :mumble-server "$final_path"

#=================================================
# Add user to ssl-cert so it can read certificates
#=================================================

usermod --append --groups ssl-cert mumble-server

#=================================================
# Set SuperUser password
#=================================================

murmurd -ini "$mumble_conf" -supw "$su_passwd" "$instance_id"

#=================================================
# Disable default server installed by Debian's package
#=================================================

systemctl stop mumble-server
systemctl disable mumble-server

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

# Add Mumble as a YunoHost service
yunohost service add $app --description="Mumble server" --log="/var/log/$app/$app.log" --needs_exposed_ports $port

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=3

ynh_systemd_action --service_name=$app --action=restart #--log_path="/var/log/$app/$app.log"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring SSOwat..." --time --weight=1

# Make app public if necessary
if [ "$is_public" -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_app_setting_set --app="$app" --key=unprotected_uris --value="/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# SEND README TO ADMIN
#=================================================

message="
Port                   : $port
Password to join server: $server_password
SuperUser Password     : $su_passwd
Welcome text           : $welcometext
Root channel (your mumble server name): $registerName
Final path (where to find your files) : $final_path
Mumble configuration file             : $mumble_conf

Note about config file: this package will regenerate the config file on upgrade.
If you changed it manually and upgrade mumble, you'll find a backup in $final_path.

Are you facing an issue, want to improve this app or say thank you?
Please open a new issue in this project: https://github.com/YunoHost-Apps/mumbleserver_ynh
"
ynh_send_readme_to_admin "$message"


#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --time --last
